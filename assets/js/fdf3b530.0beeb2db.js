"use strict";(self.webpackChunkgithubio=self.webpackChunkgithubio||[]).push([[9342],{3923:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"python/basic","title":"Setup","description":"Setup Python Env (pyenv) on Mac","source":"@site/docs/python/basic.md","sourceDirName":"python","slug":"/python/basic","permalink":"/docs/python/basic","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"pythonSidebar"}');var t=l(4848),s=l(8453);const r={sidebar_position:1},a="Setup",c={},o=[{value:"Setup Python Env (pyenv) on Mac",id:"setup-python-env-pyenv-on-mac",level:2},{value:"Installation",id:"installation",level:3},{value:"Usage",id:"usage",level:3},{value:"Setup pyenv-virtualenv",id:"setup-pyenv-virtualenv",level:2},{value:"Create virtualenv from current version",id:"create-virtualenv-from-current-version",level:3},{value:"Activate and deactivate virtualenv",id:"activate-and-deactivate-virtualenv",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"setup",children:"Setup"})}),"\n",(0,t.jsx)(n.h2,{id:"setup-python-env-pyenv-on-mac",children:"Setup Python Env (pyenv) on Mac"}),"\n",(0,t.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,t.jsxs)(n.p,{children:["Install pyenv to manage the python development environment, and each project can have dedicated and isolated environment. The detailed setup guilde is from ",(0,t.jsx)(n.a,{href:"https://github.com/pyenv/pyenv",children:"https://github.com/pyenv/pyenv"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Update homebrew and install pyenv:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"brew update\nbrew install pyenv\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"If you want to install (and update to) the latest development head of Pyenv rather than the latest release, instead run:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"brew install pyenv --head\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Update the bash configuration"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"echo 'export PYENV_ROOT=\"$HOME/.pyenv\"' >> ~/.bashrc\necho 'command -v pyenv >/dev/null || export PATH=\"$PYENV_ROOT/bin:$PATH\"' >> ~/.bashrc\necho 'eval \"$(pyenv init -)\"' >> ~/.bashrc\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Then, if you have ~/.profile, ~/.bash_profile or ~/.bash_login, add the commands there as well. If you have none of these, create a ~/.profile and add the commands there."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"echo 'export PYENV_ROOT=\"$HOME/.pyenv\"' >> ~/.profile\necho 'command -v pyenv >/dev/null || export PATH=\"$PYENV_ROOT/bin:$PATH\"' >> ~/.profile\necho 'eval \"$(pyenv init -)\"' >> ~/.profile\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Restart your shell"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'exec "$SHELL"\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Install Python build dependencies before using pyenv"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"brew install openssl readline sqlite3 xz zlib tcl-tk\n"})}),"\n",(0,t.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"List all Python versions available to pyenv"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"pyenv versions\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"List available python versions to install"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"pyenv install -l\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Install or uninstall a python version"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"pyenv install|uninstall <version>\n"})}),"\n",(0,t.jsx)(n.p,{children:"E.g. to install and then switch to the latest 3.10 release:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"pyenv install 3.10\npyenv global 3.10\n"})}),"\n",(0,t.jsx)("b",{children:"Switch different python versions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"To select a Pyenv-installed Python as the version to use, run one\nof the following commands:"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"COMMANDS.md#pyenv-shell",children:(0,t.jsx)(n.code,{children:"pyenv shell <version>"})})," -- select just for current shell session"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"COMMANDS.md#pyenv-local",children:(0,t.jsx)(n.code,{children:"pyenv local <version>"})})," -- automatically select whenever you are in the current directory (or its subdirectories)"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"COMMANDS.md#pyenv-shell",children:(0,t.jsx)(n.code,{children:"pyenv global <version>"})})," -- select globally for your user account"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"E.g. to select the above-mentioned newly-installed Python 3.10.4 as your preferred version to use:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pyenv global 3.10.4\n"})}),"\n",(0,t.jsx)(n.h2,{id:"setup-pyenv-virtualenv",children:"Setup pyenv-virtualenv"}),"\n",(0,t.jsxs)(n.p,{children:["pyenv-virtualenv is a pyenv plugin that provides features to manage virtualenvs and conda environments for Python on UNIX-like systems. details: ",(0,t.jsx)(n.a,{href:"https://github.com/pyenv/pyenv-virtualenv",children:"https://github.com/pyenv/pyenv-virtualenv"})]}),"\n",(0,t.jsx)(n.p,{children:"###Installation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"brew unlink pyenv-virtualenv\n"})}),"\n",(0,t.jsx)("b",{children:"Update the .bashrc config by adding the following"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"echo 'eval \"$(pyenv virtualenv-init -)\"' >> ~/.bashrc\n"})}),"\n",(0,t.jsx)(n.h3,{id:"create-virtualenv-from-current-version",children:"Create virtualenv from current version"}),"\n",(0,t.jsxs)(n.p,{children:["If there is only one argument given to ",(0,t.jsx)(n.code,{children:"pyenv virtualenv"}),", the virtualenv will\nbe created with the given name based on the current pyenv Python version."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"$ pyenv version\n3.4.3 (set by /home/yyuu/.pyenv/version)\n$ pyenv virtualenv venv34\n"})}),"\n",(0,t.jsx)(n.p,{children:"Or you can specify the python version to create the virtualenv"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"pyenv virtualenv 3.4.3 my-virtual-env-3.4.4\n"})}),"\n",(0,t.jsx)("b",{children:"List all virtualenvs"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"pyenv virtualenvs\n"})}),"\n",(0,t.jsx)(n.h3,{id:"activate-and-deactivate-virtualenv",children:"Activate and deactivate virtualenv"}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.code,{children:'eval "$(pyenv virtualenv-init -)"'})," is configured in your shell, ",(0,t.jsx)(n.code,{children:"pyenv-virtualenv"})," will automatically activate/deactivate virtualenvs on entering/leaving directories which contain a ",(0,t.jsx)(n.code,{children:".python-version"})," file that contains the name of a valid virtual environment as shown in the output of ",(0,t.jsx)(n.code,{children:"pyenv virtualenvs"})," (e.g., ",(0,t.jsx)(n.code,{children:"venv34"})," or ",(0,t.jsx)(n.code,{children:"3.4.3/envs/venv34"})," in example above) ."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:".python-version"})," files are used by pyenv to denote local Python versions and can be created and deleted with the ",(0,t.jsx)(n.a,{href:"https://github.com/pyenv/pyenv/blob/master/COMMANDS.md#pyenv-local",children:(0,t.jsx)(n.code,{children:"pyenv local"})})," command."]}),"\n",(0,t.jsx)(n.p,{children:"You can also activate and deactivate a pyenv virtualenv manually:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"pyenv activate <name>\npyenv deactivate\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,l)=>{l.d(n,{R:()=>r,x:()=>a});var i=l(6540);const t={},s=i.createContext(t);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);